import math
import numpy as np
from OpenGL import GL
from Source.Graphics.Actor import Actor

class Teapot(Actor):

    ## initialization
    def __init__(self, renderer,  **kwargs):
        """Initialize actor."""
        super(Teapot, self).__init__(renderer, **kwargs)

        self._level = kwargs.get("level", 0)
        self._radius = kwargs.get("radius", 1.0)
        self._rgb_colors = kwargs.get("colors", False)

        ## register shaders
        if self._rgb_colors:
            self.setSolidShader(self.shaderCollection.attributeColorPhongShader())
            self.setSolidFlatShader(self.shaderCollection.attributeColorPhongFlatShader())
            self.setNoLightSolidShader(self.shaderCollection.attributeColorShader())
            self.setWireframeShader(self.shaderCollection.uniformMaterialShader())
        else:
            self.setSolidShader(self.shaderCollection.uniformMaterialPhongShader())
            self.setSolidFlatShader(self.shaderCollection.uniformMaterialPhongFlatShader())
            self.setNoLightSolidShader(self.shaderCollection.uniformMaterialShader())
            self.setWireframeShader(self.shaderCollection.uniformMaterialPhongShader())

        self._vertices = None

        ## create actor
        self.initialize()


    def generateGeometry(self):
        """Generate vertices"""
        vertices = []
        indices = []
        middlePointIndexCache = dict()

        t = 1/4
        vertices = np.array([
            [0.000000, 0.0000000, 0.0000000],
            [7.000000, -0.000001, 12.000000],
            [4.970000, -4.970000, 12.000000],
            [4.981100, -4.981101, 12.492200],
            [7.015600, -0.000001, 12.492200],
            [5.325000, -5.325000, 12.000000],
            [7.500000, -0.000001, 12.000000],
            [0.000000, -7.000000, 12.000000],
            [0.000000, -7.015601, 12.492200],
            [0.000000, -7.500000, 12.000000],
            [-5.138700, -4.970000, 12.000000],
            [-5.002200, -4.981101, 12.492200],
            [-5.325000, -5.325000, 12.000000],
            [-7.000000, -0.000001, 12.000000],
            [-7.015600, -0.000001, 12.492200],
            [-7.500000, -0.000001, 12.000000],
            [-4.970000, 4.969999, 12.000000],
            [-4.981100, 4.981100, 12.492200],
            [-5.325000, 5.324999, 12.000000],
            [0.000000, 7.000000, 12.000000],
            [0.000000, 7.015600, 12.492200],
            [0.000000, 7.500000, 12.000000],
            [4.970000, 4.969999, 12.000000],
            [4.981100, 4.981100, 12.492200],
            [5.325000, 5.324999, 12.000000],
            [6.545300, -6.545300, 8.109400],
            [9.218800, -0.000000, 8.109400],
            [7.100000, -7.100000, 4.500000],
            [10.000000, -0.000000, 4.500000],
            [0.000000, -9.218800, 8.109400],
            [0.000000, -10.000000, 4.500000],
            [-6.545300, -6.545300, 8.109400],
            [-7.100000, -7.100000, 4.500000],
            [-9.218800, -0.000000, 8.109400],
            [-10.000000, -0.000000, 4.500000],
            [-6.545300, 6.545300, 8.109400],
            [-7.100000, 7.100000, 4.500000],
            [0.000000, 9.218800, 8.109400],
            [0.000000, 10.000000, 4.500000],
            [6.545300, 6.545300, 8.109400],
            [7.100000, 7.100000, 4.500000],
            [6.212500, -6.212500, 1.921900],
            [8.750000, -0.000000, 1.921900],
            [5.325000, -5.325000, 0.750000],
            [7.500000, -0.000000, 0.750000],
            [0.000000, -8.750000, 1.921900],
            [0.000000, -7.500000, 0.750000],
            [-6.212500, -6.212500, 1.921900],
            [-5.325000, -5.325000, 0.750000],
            [-8.750000, -0.000000, 1.921900],
            [-7.500000, -0.000000, 0.750000],
            [-6.212500, 6.212500, 1.921900],
            [-5.325000, 5.325000, 0.750000],
            [0.000000, 8.750000, 1.921900],
            [0.000000, 7.500000, 0.750000],
            [6.212500, 6.212500, 1.921900],
            [5.325000, 5.325000, 0.750000],
            [4.559500, -4.559500, 0.234400],
            [6.421900, -0.000000, 0.234400],
            [0.000000, 0.000000, 0.000000],
            [0.000000, -6.421900, 0.234400],
            [-4.559500, -4.559500, 0.234400],
            [-6.421900, -0.000000, 0.234400],
            [-4.559500, 4.559500, 0.234400],
            [0.000000, 6.421900, 0.234400],
            [4.559500, 4.559500, 0.234400],
            [-8.000000, -0.000000, 10.125000],
            [-7.750000, -1.125000, 10.687500],
            [-12.593800, -1.125000, 10.476600],
            [-12.062500, -0.000000, 9.984400],
            [-14.250000, -1.125000, 9.000000],
            [-13.500000, -0.000000, 9.000000],
            [-7.500000, -0.000000, 11.250000],
            [-13.125000, -0.000000, 10.968800],
            [-15.000000, -0.000000, 9.000000],
            [-7.750000, 1.125000, 10.687500],
            [-12.593800, 1.125000, 10.476600],
            [-14.250000, 1.125000, 9.000000],
            [-13.171900, -1.125000, 6.269500],
            [-12.687500, -0.000000, 6.750000],
            [-9.750000, -1.125000, 3.750000],
            [-13.656300, -0.000000, 5.789100],
            [-9.500000, -0.000000, 3.000000],
            [-13.171900, 1.125000, 6.269500],
            [-9.750000, 1.125000, 3.750000],
            [8.500000, -0.000000, 7.125000],
            [8.500000, -2.475000, 5.062500],
            [12.687500, -1.706200, 8.109400],
            [11.937500, -0.000000, 9.000000],
            [15.000000, -0.937501, 12.000000],
            [13.500000, -0.000001, 12.000000],
            [8.500000, -0.000000, 3.000000],
            [13.437500, -0.000000, 7.218700],
            [16.500000, -0.000001, 12.000000],
            [8.500000, 2.475000, 5.062500],
            [12.687500, 1.706200, 8.109400],
            [15.000000, 0.937499, 12.000000],
            [15.632800, -0.750001, 12.334000],
            [14.125000, -0.000001, 12.281300],
            [15.000000, -0.562501, 12.000000],
            [14.000000, -0.000001, 12.000000],
            [17.140600, -0.000001, 12.386700],
            [16.000000, -0.000001, 12.000000],
            [15.632800, 0.749999, 12.334000],
            [15.000000, 0.562499, 12.000000],
            [1.155200, -1.155201, 14.906300],
            [1.625000, -0.000001, 14.906300],
            [0.000000, -0.000001, 15.750000],
            [0.710000, -0.710001, 13.500000],
            [1.000000, -0.000001, 13.500000],
            [0.000000, -1.625001, 14.906300],
            [0.000000, -1.000001, 13.500000],
            [-1.155200, -1.155201, 14.906300],
            [-0.710000, -0.710001, 13.500000],
            [-1.625000, -0.000001, 14.906300],
            [-1.000000, -0.000001, 13.500000],
            [-1.155200, 1.155199, 14.906300],
            [-0.710000, 0.709999, 13.500000],
            [0.000000, 1.624999, 14.906300],
            [0.000000, 0.999999, 13.500000],
            [1.155200, 1.155199, 14.906300],
            [0.710000, 0.709999, 13.500000],
            [2.928800, -2.928801, 12.750000],
            [4.125000, -0.000001, 12.750000],
            [4.615000, -4.615000, 12.000000],
            [6.500000, -0.000001, 12.000000],
            [0.000000, -4.125000, 12.750000],
            [0.000000, -6.500000, 12.000000],
            [-2.928800, -2.928801, 12.750000],
            [-4.615000, -4.615000, 12.000000],
            [-4.125000, -0.000001, 12.750000],
            [-6.500000, -0.000001, 12.000000],
            [-2.928800, 2.928800, 12.750000],
            [-4.615000, 4.614999, 12.000000],
            [0.000000, 4.125000, 12.750000],
            [0.000000, 6.500000, 12.000000],
            [2.928800, 2.928800, 12.750000],
            [4.615000, 4.614999, 12.000000]
        ], dtype=np.float32)

        mean_x = np.mean(vertices[:,0])
        mean_y = np.mean(vertices[:,1])
        mean_z = np.mean(vertices[:,2])

        vertices[:,0] -= mean_x
        vertices[:,1] -= mean_y
        vertices[:,2] -= mean_z

        vertices *= t

        indices = np.array([
            [2, 4, 1],
            [3, 6, 4],
            [2, 8, 3],
            [3, 9, 5],
            [7, 11, 8],
            [8, 12, 9],
            [10, 14, 11],
            [11, 15, 12],
            [16, 14, 13],
            [17, 15, 14],
            [16, 20, 17],
            [17, 21, 18],
            [22, 20, 19],
            [23, 21, 20],
            [22, 4, 23],
            [23, 6, 24],
            [5, 26, 6],
            [25, 28, 26],
            [5, 29, 25],
            [25, 30, 27],
            [12, 29, 9],
            [31, 30, 29],
            [12, 33, 31],
            [31, 34, 32],
            [18, 33, 15],
            [35, 34, 33],
            [18, 37, 35],
            [35, 38, 36],
            [24, 37, 21],
            [39, 38, 37],
            [24, 26, 39],
            [39, 28, 40],
            [28, 41, 42],
            [42, 43, 44],
            [30, 41, 27],
            [45, 43, 41],
            [30, 47, 45],
            [45, 48, 46],
            [34, 47, 32],
            [49, 48, 47],
            [34, 51, 49],
            [49, 52, 50],
            [38, 51, 36],
            [53, 52, 51],
            [38, 55, 53],
            [53, 56, 54],
            [28, 55, 40],
            [42, 56, 55],
            [44, 57, 58],
            [58, 57, 59],
            [46, 57, 43],
            [57, 60, 59],
            [46, 61, 60],
            [60, 61, 59],
            [50, 61, 48],
            [61, 62, 59],
            [50, 63, 62],
            [62, 63, 59],
            [54, 63, 52],
            [63, 64, 59],
            [54, 65, 64],
            [64, 65, 59],
            [44, 65, 56],
            [65, 58, 59],
            [67, 69, 66],
            [68, 71, 69],
            [72, 68, 67],
            [73, 70, 68],
            [72, 76, 73],
            [73, 77, 74],
            [75, 69, 76],
            [76, 71, 77],
            [70, 79, 71],
            [78, 34, 79],
            [70, 81, 78],
            [81, 80, 78],
            [77, 81, 74],
            [81, 84, 82],
            [77, 79, 83],
            [83, 34, 84],
            [85, 87, 88],
            [87, 90, 88],
            [86, 92, 87],
            [92, 89, 87],
            [94, 92, 91],
            [92, 96, 93],
            [85, 95, 94],
            [95, 90, 96],
            [89, 98, 90],
            [98, 99, 100],
            [93, 97, 89],
            [97, 102, 99],
            [93, 103, 101],
            [103, 102, 101],
            [96, 98, 103],
            [98, 104, 103],
            [105, 106, 107],
            [106, 108, 109],
            [110, 105, 107],
            [110, 108, 105],
            [112, 110, 107],
            [110, 113, 111],
            [114, 112, 107],
            [114, 113, 112],
            [116, 114, 107],
            [114, 117, 115],
            [118, 116, 107],
            [118, 117, 116],
            [120, 118, 107],
            [118, 121, 119],
            [106, 120, 107],
            [106, 121, 120],
            [108, 123, 109],
            [122, 125, 123],
            [108, 126, 122],
            [122, 127, 124],
            [113, 126, 111],
            [128, 127, 126],
            [113, 130, 128],
            [128, 131, 129],
            [117, 130, 115],
            [132, 131, 130],
            [117, 134, 132],
            [132, 135, 133],
            [121, 134, 119],
            [136, 135, 134],
            [121, 123, 136],
            [136, 125, 137],
            [2, 3, 4],
            [3, 5, 6],
            [2, 7, 8],
            [3, 8, 9],
            [7, 10, 11],
            [8, 11, 12],
            [10, 13, 14],
            [11, 14, 15],
            [16, 17, 14],
            [17, 18, 15],
            [16, 19, 20],
            [17, 20, 21],
            [22, 23, 20],
            [23, 24, 21],
            [22, 1, 4],
            [23, 4, 6],
            [5, 25, 26],
            [25, 27, 28],
            [5, 9, 29],
            [25, 29, 30],
            [12, 31, 29],
            [31, 32, 30],
            [12, 15, 33],
            [31, 33, 34],
            [18, 35, 33],
            [35, 36, 34],
            [18, 21, 37],
            [35, 37, 38],
            [24, 39, 37],
            [39, 40, 38],
            [24, 6, 26],
            [39, 26, 28],
            [28, 27, 41],
            [42, 41, 43],
            [30, 45, 41],
            [45, 46, 43],
            [30, 32, 47],
            [45, 47, 48],
            [34, 49, 47],
            [49, 50, 48],
            [34, 36, 51],
            [49, 51, 52],
            [38, 53, 51],
            [53, 54, 52],
            [38, 40, 55],
            [53, 55, 56],
            [28, 42, 55],
            [42, 44, 56],
            [44, 43, 57],
            [46, 60, 57],
            [46, 48, 61],
            [50, 62, 61],
            [50, 52, 63],
            [54, 64, 63],
            [54, 56, 65],
            [44, 58, 65],
            [67, 68, 69],
            [68, 70, 71],
            [72, 73, 68],
            [73, 74, 70],
            [72, 75, 76],
            [73, 76, 77],
            [75, 66, 69],
            [76, 69, 71],
            [70, 78, 79],
            [78, 80, 34],
            [70, 74, 81],
            [81, 82, 80],
            [77, 83, 81],
            [81, 83, 84],
            [77, 71, 79],
            [83, 79, 34],
            [85, 86, 87],
            [87, 89, 90],
            [86, 91, 92],
            [92, 93, 89],
            [94, 95, 92],
            [92, 95, 96],
            [85, 88, 95],
            [95, 88, 90],
            [89, 97, 98],
            [98, 97, 99],
            [93, 101, 97],
            [97, 101, 102],
            [93, 96, 103],
            [103, 104, 102],
            [96, 90, 98],
            [98, 100, 104],
            [106, 105, 108],
            [110, 111, 108],
            [110, 112, 113],
            [114, 115, 113],
            [114, 116, 117],
            [118, 119, 117],
            [118, 120, 121],
            [106, 109, 121],
            [108, 122, 123],
            [122, 124, 125],
            [108, 111, 126],
            [122, 126, 127],
            [113, 128, 126],
            [128, 129, 127],
            [113, 115, 130],
            [128, 130, 131],
            [117, 132, 130],
            [132, 133, 131],
            [117, 119, 134],
            [132, 134, 135],
            [121, 136, 134],
            [136, 137, 135],
            [121, 109, 123],
            [136, 123, 125]
        ], dtype=np.uint32)

        normals = np.array([
            [0.00000, 0.0000, 0.0000],
            [-0.7067, 0.7067, 0.0319],
            [-0.1417, 0.0000, 0.9899],
            [-0.9995, -0.0000, 0.0317],
            [-0.0966, 0.0966, 0.9906],
            [0.8400, 0.0000, 0.5425],
            [0.0023, 0.1379, 0.9904],
            [0.0001, -0.8395, 0.5434],
            [0.5936, -0.5936, 0.5435],
            [0.0012, 0.9985, 0.0541],
            [0.0678, 0.2385, 0.9688],
            [-0.5962, -0.5984, 0.5352],
            [0.7018, 0.6574, -0.2743],
            [0.1482, -0.0144, 0.9889],
            [-0.8391, 0.0012, 0.5439],
            [0.7067, -0.7067, 0.0319],
            [0.9943, -0.0201, 0.1051],
            [0.0966, -0.0966, 0.9906],
            [0.0000, -0.1417, 0.9899],
            [0.0000, 0.8400, 0.5425],
            [-0.5936, 0.5936, 0.5435],
            [-0.7067, -0.7067, 0.0319],
            [0.0000, -0.9995, 0.0317],
            [-0.0966, -0.0966, 0.9906],
            [0.5936, 0.5936, 0.5435],
            [0.9532, -0.0000, 0.3025],
            [0.6738, -0.6738, 0.3034],
            [0.9939, -0.0000, -0.1105],
            [0.0000, -0.9532, 0.3025],
            [0.0000, -0.9939, -0.1105],
            [0.7028, -0.7028, -0.1107],
            [-0.6738, -0.6738, 0.3034],
            [-0.9532, -0.0000, 0.3025],
            [-0.7457, 0.0000, 0.6662],
            [-0.7028, -0.7028, -0.1107],
            [-0.6738, 0.6738, 0.3034],
            [0.0000, 0.9532, 0.3025],
            [-0.0000, 0.9939, -0.1105],
            [-0.7028, 0.7028, -0.1107],
            [0.6738, 0.6738, 0.3034],
            [0.7028, 0.7028, -0.1107],
            [0.5792, -0.5792, -0.5735],
            [0.8198, 0.0000, -0.5726],
            [0.4157, -0.4157, -0.8089],
            [0.5888, 0.0000, -0.8083],
            [0.0000, -0.8198, -0.5726],
            [-0.5792, -0.5792, -0.5735],
            [-0.4157, -0.4157, -0.8089],
            [0.0000, -0.5888, -0.8083],
            [-0.8198, 0.0000, -0.5726],
            [-0.5792, 0.5792, -0.5735],
            [-0.4157, 0.4157, -0.8089],
            [-0.5888, 0.0000, -0.8083],
            [0.0000, 0.8198, -0.5726],
            [0.5792, 0.5792, -0.5735],
            [0.4157, 0.4157, -0.8089],
            [0.0000, 0.5888, -0.8083],
            [0.2016, -0.2016, -0.9585],
            [0.2850, 0.0000, -0.9585],
            [0.0000, 0.0000, -1.0000],
            [0.0000, -0.2850, -0.9585],
            [-0.2016, -0.2016, -0.9585],
            [-0.2850, 0.0000, -0.9585],
            [-0.2016, 0.2016, -0.9585],
            [-0.0000, 0.2850, -0.9585],
            [0.2016, 0.2016, -0.9585],
            [-0.0163, -0.9643, 0.2642],
            [0.2491, 0.0139, -0.9684],
            [0.0335, 0.0031, -0.9994],
            [0.0100, -0.9855, 0.1692],
            [0.9298, 0.0411, -0.3658],
            [-0.0450, -0.0014, 0.9990],
            [-0.4425, -0.0044, 0.8967],
            [-0.3032, -0.9457, 0.1168],
            [0.0063, 0.9849, 0.1729],
            [-0.2695, 0.9575, 0.1026],
            [-0.9863, 0.0032, 0.1651],
            [-0.0157, 0.9654, 0.2602],
            [0.8289, 0.0134, 0.5593],
            [-0.1115, -0.9910, -0.0737],
            [0.6069, 0.0290, 0.7942],
            [-0.7841, -0.0079, -0.6206],
            [-0.3534, -0.7618, -0.5429],
            [-0.3230, 0.7878, -0.5244],
            [-0.5545, -0.0076, -0.8321],
            [-0.1021, 0.9902, -0.0951],
            [-0.4885, 0.0072, 0.8726],
            [0.2052, -0.9783, 0.0282],
            [-0.7440, -0.0236, 0.6678],
            [-0.6974, -0.0564, 0.7144],
            [0.3245, -0.9129, -0.2475],
            [0.7848, 0.0174, -0.6196],
            [-0.0408, -0.9549, 0.2940],
            [0.3423, 0.9074, -0.2439],
            [0.6475, 0.0025, -0.7621],
            [0.0592, 0.9453, 0.3207],
            [0.6035, 0.1005, -0.7910],
            [0.1831, 0.9830, -0.0165],
            [0.0307, -0.0671, 0.9973],
            [0.3038, 0.9495, -0.0791],
            [0.9551, -0.0142, -0.2960],
            [0.2492, -0.6252, 0.7396],
            [-0.3214, 0.0029, 0.9470],
            [0.4059, 0.5303, 0.7443],
            [0.8746, 0.1337, 0.4661],
            [0.3288, -0.9320, -0.1526],
            [0.6774, -0.6774, 0.2870],
            [0.9576, 0.0000, 0.2882],
            [0.0000, -0.0000, 1.0000],
            [0.5953, -0.5952, 0.5398],
            [0.8433, -0.0003, 0.5374],
            [0.0000, -0.9576, 0.2882],
            [-0.6774, -0.6774, 0.2870],
            [-0.5952, -0.5955, 0.5396],
            [-0.0004, -0.8436, 0.5369],
            [-0.9576, 0.0000, 0.2882],
            [-0.6774, 0.6774, 0.2870],
            [-0.5952, 0.5952, 0.5398],
            [-0.8435, 0.0000, 0.5372],
            [0.0000, 0.9576, 0.2882],
            [0.6774, 0.6774, 0.2870],
            [0.5952, 0.5955, 0.5396],
            [0.0004, 0.8436, 0.5369],
            [0.2754, -0.0000, 0.9613],
            [0.1942, -0.1942, 0.9616],
            [0.3011, 0.0000, 0.9536],
            [0.0000, -0.2754, 0.9613],
            [-0.0000, -0.3011, 0.9536],
            [0.2121, -0.2121, 0.9539],
            [-0.1942, -0.1942, 0.9616],
            [-0.2754, 0.0000, 0.9613],
            [-0.3011, 0.0000, 0.9536],
            [-0.2121, -0.2121, 0.9539],
            [-0.1942, 0.1942, 0.9616],
            [0.0000, 0.2754, 0.9613],
            [0.0000, 0.3011, 0.9536],
            [-0.2121, 0.2121, 0.9539],
            [0.1942, 0.1942, 0.9616],
            [0.2121, 0.2121, 0.9539]
        ], dtype=np.float32)

        self._normals = np.array(normals, dtype=np.float32)
        self._vertices = np.array(vertices, dtype=np.float32)
        if self._rgb_colors:
            self._colors = np.abs(np.array(vertices, dtype=np.float32))
        self._indices = np.array(indices, dtype=np.uint32)


    def initialize(self):
        """Creates teapot geometry"""
        if self._vertices is None:
            self.generateGeometry()

        ## create object
        self.create(self._vertices, colors=self._colors if self._rgb_colors else None,
            normals=self._normals,
            indices=self._indices)
            

    def render(self):
        """Render teapot"""
        GL.glDrawElements(self._render_mode, self.numberOfIndices, GL.GL_UNSIGNED_INT, None)

    
